pwd

cd ..
cd ../..

view a content in a file
    cat file1.txt
    cat file1.txt file2.txt


head and tail
    head -n 10 file1.txt
    tail -n 10 file1.txt

less
    less 2023.csv
    less -N 2023.csv / -N flag to show line numbers.

touch : updates the access & modification timestamps of a file. or create a file if not exists
mkdir <a folder>

move command
    The move command moves a file or directory from one location to another. 
    You can use it to rename a file or to move it to a different directory altogether. 
    Your working directory can't be the directory you're moving.

    renaming:
        mv some_file.txt some_other_name.txt
    move a file:
        mv some_file.txt some_directory/some_file.txt
        mv some_file.txt ../some_file.txt
    
    mv some_file.txt some_directory/

remove
    delete a files or a empty direc 
        rm some_file.txt
    
    delete a direct:
        rm -r some_directory
    
copy
    copy a file to a location
        cp source_file.txt destination/
    copy a direct
        cp -R my_dir new_dir

cd ~ : home

grep
    basic usage
        grep "hello" words.txt
    
    mutiple files
        grep "Hello" hello.txt hello2.txt
    
    recursive search
        grep -r "hello" . (. special alias for current direct)


find:
    find a file by name
        find some_directory -name hello.txt

    pattern searching
        find some_directory -name "*.txt" (* is a wild card that match anything)

        find all filenames that contain the word "chad"
            find some_directory -name "*chad*"

changing permission:
    ls -l : print out the permissions of each file and directory in long format.

    Change the permissions of the private directory and all of its contents so that:
        The owner can read, write, and execute
        The group can do nothing
        Others can do nothing
        
        command : chmod -R u=rwx,g=,o= DIRECTORY : 

    executables
        run a file shell: 
            mydir/program.sh
        if in current directory : 
            ./program.sh

    simply remove the executable permission:
        chmod -x genids.sh
    
    re-add the executable program permission for the owner:
        chmod u+x <file_name>
    
    rm -rf / : remove forcfully and recursively

    chown:
        change the owner of a directory
            sudo chown -R root <directory>


shell configuration : nano ~/.bashrc

current : https://www.boot.dev/lessons/81bcdb75-5ff0-41bf-9541-ee185d1c7498
yt : https://www.youtube.com/watch?v=v392lEyM29A&t=4416s 1:26:46

alias:
    ~ : home
    . : current dicect
    .. : parent direct

    ls -a ~

enviroment variable:
    export NAME="Lane"
    echo $NAME
    # Lane

    #!/bin/sh
    echo "Hi I'm $NAME"

    chmod +x ./introduce.sh

    ./introduce.sh
    # Hi I'm Lane

PATH
    echo $PATH
    change path temporary:
        export PATH="$PATH:/path/to/new"
    cd ~
    nano .bashrc
    source ~/.bashrc

    pwd : to see your whole path


input/output:
    man man : reading the manual's manual
    ls -al 
    curl --help

    ./warn.sh (if u r in the current folder consist warn.sh)

    echo $? : check exit code
        if 0 : successed
        else : failed
    
    standard error:
        > : for redirecting stdout
        2> : stderr

        example : 
            echo "Hello world" > hello.txt
            cat hello.txt
            # Hello world
        
    standrad in:
        read KHOA
    
    Pipe:
        echo "Have you heard the tragedy of Darth Plagueis the Wise?" | wc -w
        grep -R "Bob" ../transactions/ --exclude-dir="backups" | wc -l

    interrupt:
        ctrl C 
        kill PID

        show all process: ps aux

        ps aux | grep malicious.sh 

        

